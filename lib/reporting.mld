{0 Logging and Notifications}

{1 Caveat}

The following is what {i ought} to happen. As of 2022-09-28, it is not what
actually does happen.

{1 Background}

{!Whatwhat} retrieves and integrates data from two sources: GitHub and
Forecast. These systems have been repurposed by us in order to manage our
projects and so the "true data model" (representing real-world REG projects) is
not necessarily faithfully represented by the data models of these
systems. Thus, errors, omissions, and inconsistencies may occur.

We classify problems into {i errors} and {i warnings}:
- An {i error} occurs when the data retrieved from the data sources, while valid
  in the domain model of the data source, is not valid in the domain model of
  whatwhat and cannot be represented as a type returned by the library. When an
  error occures the entity causing the error is typically ignored thereafter
  (which may cause subsequent errors or warnings).
- A {i warning} occurs when a valid representation is possible but is in some
  way or other problematic. Warnings should result in nudges for people to fix
  the problem.
  
It is conceivable the JSON returned by the APIs of GitHub or Forecast may not
parse as expected: that is a fatal error and whatwhat will throw an exception
and halt.

(We may later include {i notifications}, which are user-requested commentary on
potential problems.)

Errors and warnings are passed to the logging system whose job is to communicate
them to the appropriate place. Errors and warnings may arise in two places:
  + When reading the data from either GitHub or Forecast;
  + When combining the data from these two sources.


{1 Reading data from Forecast}

Forecast is authoritative for people and allocations so the most likely sources of
errors are projects. 

{2 Errors}

- The project code field (which ought to hold the hut23 issue
  number) is null.
- The project code is not of the correct format, e.g., "[hut23-999]".
- The person email field is null.
- The assignment person does not match a person (probably because we have
  deleted it).
- The assignment project does not match a project (probably because we
  have deleted it).

{2 Warnings}

- The project tags field (which ought to hold the Finance code) is empty; 
- The project tags field has more than one entry.
- Two projects exist with the same project code but a different name (in
  general, it is okay to have two projects with the same code becuase they refer
  to the same real-world project).

{1 Reading data from GitHub}

GitHub is authoritative for projects but the YAML metadata block is not part of
the GitHub data model so leaves a lot of room for trouble. 

For reference, the stages of a project, in order, are presently:
- [Suggested]
- [Proposal]
- [Extra info needed]
- [Project appraisal]
- [Awaiting go/no-go]
- [Finding people]
- [Awaiting start]
- [Active]
- [Completion review]
- [Done]
- [Cancelled]
- [Rejected]

and the YAML data block has the following fields:

- [turing-project-code] (SHOULD BE DEPRECATED!) This is (occasionally) used to hold the
  Finance code; however, projects may not (yet) have a Finance code or may have
  more than one Finance code. 
- [earliest-start-date]: missing or null allowed; means "no earliest start date"
- [latest-start-date]: missing or null allowed; means "no latest start date"
- [latest-end-date]: missing or null allowed; means "no latest end date"
- [max-FTE-percent]: Integer 0–100
- [min-FTE-percent]: Integer 0–100
- [nominal-FTE-percent]: Integer 0–100
- [FTE-months]: Integer, must not be specified together with [FTE-weeks] 
- [FTE-weeks]: Integer, must not be specified together with [FTE-months] 

{2 Errors}

A malformed YAML block halts parsing of entire block. Possible reasons for error are:
{ul 
  {- A non-optional metadata block cannot be found}
  {- A field cannot be parsed, because: 
  {ul {- its name is not in the accepted list; or}
      {- the format of the value is not valid.}}} 
  {- The same field is specified twice}
  {- there is no [FTE-months] or [FTE-weeks]} 
  {- both [FTE-months] and [FTE-weeks] are specified}}

{2 Warnings}

- A field that can be null is missing
- A field that can be null has a missing value

{1 Combining data}

Even if both the GitHub and the Forecast data appear to satisfy the domain model
we may still have problems when they are combined. 

{2 Errors}

- A project on Forecast has a Hut23 code that is not present in the list of
  projects from GitHub.
- A project on Forecast has a Finance Code that is not in the list of Finance
  Codes from the metadata. (What do we do when the project Finance Code is
  "UNKNOWN FINANCE CODE"? Do we issue an error or a warning? If a warning, does
  that mean we need to make "UNKNOWN FINANCE CODE" a possible code for every project?)

{2 Warnings}

Warnings occur when the import of the allocations in Forecast doesn't match
what's implied by the metadata.

- A project is in "Looking for people" or later, but has no matching Forecast project
- There are allocations to a project beyond its latest end date
- There are allocations to a project before its earliest start date
- The total resource allocated exceeds the FTE-weeks
- The run-rate resource at any time is lower than min-FTE-percent or higher than
max-FTE-percent.
- An individual has an allocation that is greater than 100%
- The project is in "active" but there are no present allocations; or there are
present allocations but the project is no "active".
- The project is past its latest start date but is not "active"


{1 Notifications}

If whatwhat is run in "notification" mode, it issues a report on likely
problems. These are of two kinds: problems that exist now, and problems that
will exist in the future if left uncorrected.

{2 Things that will become problems if left unattended}

- A project is active but the total allocation to the project is less than the
  FTE-weeks (within some delta)

{2 Informational messages}

- A project is within T + delta of its latest start date but there are no
  allocations
- A project is within T + delta of its latest start date but is not "Awaiting
  start"
- A project is "Awaiting start" but the total allocation is less than the
  FTE-weeks (within some delta)
- A person's allocation will be less than 100% at T + delta
- A person's allocation to a project will change within in T + delta
- A project's allocations will change within T + delta


