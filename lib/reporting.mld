{0 Logging and Notifications}

{1 Caveat}

The following is what {i ought} to happen. As of 2023-03-15, it is not yet what
actually happens.

{1 Overview}

{!Whatwhat} retrieves and integrates data from two sources: GitHub and
Forecast. These systems have been repurposed by us in order to manage our
projects and so the "true data model" (representing real-world REG projects) is
not necessarily faithfully represented by the data models of these
systems. Thus, errors, omissions, and inconsistencies may occur.

We classify problems into {i errors} and {i warnings}:
- An {i error} (E-code) occurs when the data retrieved from the data sources,
  while valid in the domain model of the data source, is not valid in the
  domain model of whatwhat and cannot be represented as a type returned by the
  library. When an error occurs, the entity causing the error is typically
  ignored thereafter, which may lead to subsequent errors or warnings.
- A {i warning} (W-code) occurs when a valid representation is possible but is
  in some way or other problematic. Warnings should result in nudges for people
  to fix the problem.
- An {i information message} (I-code) is used for commentary on potential
  problems.
  
All of these are passed to the logging system, whose job is to then communicate
them to the appropriate target. Errors and warnings may arise in three places:
  + When reading the data from Forecast;
  + When reading the data from GitHub;
  + When combining the data from these two sources.


{1 Reading data from Forecast}

All error codes under this section should begin with the number 1.

Forecast is authoritative for people and allocations, so the most likely
sources of errors are projects. 

{2 Errors}

- {b E1001} The project code field (which ought to hold the issue number X in
  the format "hut23-X") is null.
- {b E1002} The project code is not null but does not have the correct format.
- {b E1003} The person email field is null.
- {b E1004} The person email field is not a valid email. 'Valid' in this case
  means 'matching ^[A-Za-z0-9._%+-]+@[A-Za-z0-9.+-]+\.[A-Za-z]{2,}$', which is
  not quite accurate (the technical definition is in
  {{: https://www.rfc-editor.org/rfc/rfc5322 }RFC 5322}), but is really enough
  to catch empty emails and other typos.
- {b E1005} The assignment person does not match a person (probably because we
  have deleted it).
- {b E1006} The assignment project does not match a project (probably because we
  have deleted it).
- {b E1007} The project has no client on Forecast. This occurs naturally with
  the built-in 'Time Off' project. To suppress this error, this project should
  be added to the 'ignoredForecastProjects' configuration variable.

{2 Warnings}

- {b W1001} The project tags field (which ought to hold the finance code) is
  empty. 
- {b W1002} The project tags field has more than one entry.
- {b W1003} Two projects exist with the same issue number in Forecast but a
  different name.
- {b W1003} Two projects exist with the same issue number in Forecast and the
  same name. (In general, this should not be a problem as both projects in
  Forecast will refer to the same real-world project. However, it's a useful
  thing to be aware of.)





{1 Reading data from GitHub}

All error codes under this section should begin with the number 2.

GitHub is authoritative for projects but the YAML metadata block is not part of
the GitHub data model so leaves a lot of room for trouble. 

For reference, the stages of a project, in order, are presently:
- [Suggested]
- [Proposal]
- [Extra info needed]
- [Project appraisal]
- [Awaiting go/no-go]
- [Finding people]
- [Awaiting start]
- [Active]
- [Completion review]
- [Done]
- [Cancelled]
- [Rejected]

and the YAML data block has the following fields:

- [turing-project-code] {i (Should be deprecated?)}
  - Must be present
  - May be null, when the finance code is not known yet.
- [earliest-start-date]
  - Must be present
  - May be null, when there is "no earliest start date"
- [latest-start-date]
  - Must be present
  - May not be null
- [latest-end-date]
  - Must be present
  - May be null, when there is "no latest end date"
- [nominal-FTE-percent]
  - Must be present
  - Must be an integer between 0 and 100
- [max-FTE-percent]
  - Must be present
  - May be null, meaning "same as nominal"
  - If present, must be an integer between 0 and 100
- [min-FTE-percent]
  - Must be present
  - May be null, meaning "same as nominal"
  - If present, must be an integer between 0 and 100
- [FTE-months]
  - Must be present if [FTE-weeks] is not
  - Must be an integer
- [FTE-weeks]
  - Must be present if [FTE-months] is not
  - Must be an integer

{2 Errors}

A malformed YAML block halts parsing of the entire block. Possible reasons for
error are:

- {b E2001} A metadata block cannot be found at all.
- {b E2002} A metadata block was found, but is not valid YAML.
- {b E2003} An unexpected metadata field is present.
- {b E2004} A metadata field cannot be parsed because its value is invalid
  (e.g. the wrong type).
- {b E2005} A metadata field is specified more than once.
- {b E2006} Neither [FTE-months] nor [FTE-weeks] are given.
- {b E2007} Both [FTE-months] and [FTE-weeks] are given.
- {b E2008} A compulsory metadata field is not present.
- {b E2009} A metadata field that cannot be null is null (or empty).

{2 Warnings}

- {b W2001} A field that can be null is null (or empty).





{1 Combining data}

All error codes under this section should begin with the number 3.

Even if both the GitHub and the Forecast data appear to satisfy the domain
model, we may still have problems when they are combined.

{2 Errors}

- {b E3001} A project on Forecast has a Hut23 issue number that is not present in
  the GitHub project tracker.
- {b E3002} A project on Forecast has a finance code that is not contained in the
  list of finance codes in the GitHub metadata.

(TODO: What do we do when the project Finance Code is "UNKNOWN FINANCE CODE"? Do we
issue an error or a warning? If a warning, does that mean we need to make
"UNKNOWN FINANCE CODE" a possible code for every project?)

{2 Warnings}

Warnings occur when the allocations in Forecast do not match what is implied by
the GitHub metadata.

- {b W3001} A project is in "Looking for people" or later, but has no matching
  Forecast project.
- {b W3002} There are allocations to a project beyond its latest end date.
- {b W3003} There are allocations to a project before its earliest start date.
- {b W3004} The total resource allocated exceeds the FTE-weeks or FTE-months.
- {b W3005} The run-rate resource at any time is lower than min-FTE-percent or
  higher than max-FTE-percent.
- {b W3006} An individual has an allocation that is greater than 100%.
- {b W3007} The project is in the "Active" column but there are no present
  allocations on Forecast.
- {b W3008} There are allocations to a project but the project is not in the
  "Active" column.
- {b W3009} The project is past its latest start date but is not in the
  "Active" column.
- {b W3010} A Forecast user could not be matched to a user on GitHub.


{1 Reporting}

If whatwhat is run in "report" mode, it issues a report on likely
problems. These are of two kinds: problems that exist now, and problems that
will exist in the future if left uncorrected.

{2 Things that will become problems if left unattended}

- A project is active but the total allocation to the project is less than the
  FTE-weeks (within some delta)

{2 Informational messages}

- A project is within T + delta of its latest start date but there are no
  allocations
- A project is within T + delta of its latest start date but is not "Awaiting
  start"
- A project is "Awaiting start" but the total allocation is less than the
  FTE-weeks (within some delta)
- A person's allocation will be less than 100% at T + delta
- A person's allocation to a project will change within in T + delta
- A project's allocations will change within T + delta


{1 Notifications}

{b TODO}
   
The following individuals may receive messages:

    - Fallback (email): A hard-coded person if the Scheduler cannot be found

    - The Scheduler (GitHub): The people listed in the GitHub service area for
      Scheduling

    - Project Shepherd (GitHub): Anyone listed in the project GitHub issue

    - Project Team (email): Anyone allocated to the project in the next six
      months

    - Programme Shepherd (GitHub): Anyone listed in the Programme Service area

    - Programe Lead (Forecast): Anyone allocated to the Programme Service area
      in the next six months.

    - The On-Call (Forecast): The person referred to by a particular assignment
